!function(e){var t={};function n(o){if(t[o])return t[o].exports;var a=t[o]={i:o,l:!1,exports:{}};return e[o].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(o,a,function(t){return e[t]}.bind(null,a));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=2)}([function(e,t){e.exports='<!DOCTYPE html> <html lang="en"> <head> <meta charset="UTF-8"/> <meta http-equiv="X-UA-Compatible" content="IE=edge"/> <meta name="viewport" content="width=device-width,initial-scale=1"/> <title>Notion Backups</title> <style>.container{width:100%;height:100vh;background:#fff;display:flex;align-items:center;justify-content:center}.description{padding:40px;font-size:18pt;border:1px solid;border-radius:13px;font-family:system-ui}.code{color:#ff2121;background-color:#dcdcdc;padding:5px;border-radius:3px;font-size:18px}li{line-height:44px}button{padding:15px;font-size:20px;margin:15px 0;background-color:#000;color:#fff;border:none;outline:0;border-radius:10px}button:hover{opacity:.8;cursor:pointer}.success{color:green}.failure{color:red}</style> </head> <body> <div class="container"> <div class="description"> <span>‚úÖ It\'s all right!</span><br/><br/> To manually test the script, click this button. <br/> <div class="actions"> <button id="trigger">‚òÅÔ∏è Trigger Export</button> <div class="responses"></div> </div> <p> in order for the script to execute on a time-based, you must create <br/>a cron job task for it, Navigate to <b> Worker > Triggers > Cron Triggers</b><br/> and add a new cron trigger </p> Examples: <ul> <li> <span class="code">0 0 * * *</span> will cause the script to execute once everyday. </li> <li> <span class="code">0 0 */10 * *</span> will cause the script to execute once every ten days. </li> <li> <span class="code">0 0 1 * *</span> will cause the script to run on a monthly basis. </li> </ul> </div> </div> <script>window.onload=()=>{document.querySelector("#trigger").addEventListener("click",async()=>{const e=document.querySelector(".responses");e.innerHTML="";const t=document.createElement("SPAN");(await fetch("/test")).ok?(t.classList.add("success"),t.innerText="Success! started exporting your workspaces..."):(t.classList.add("failure"),t.innerText="Unable to start the script, please activate the test mode."),e.appendChild(t)})}<\/script> </body> </html> '},function(e,t){e.exports='<!DOCTYPE html> <html lang="en"> <head> <meta charset="UTF-8"/> <meta http-equiv="X-UA-Compatible" content="IE=edge"/> <meta name="viewport" content="width=device-width,initial-scale=1"/> <title>Notion Backups</title> <style>.container{width:100%;height:100vh;background:#fff;display:flex;align-items:center;justify-content:center}.description{padding:40px;font-size:18pt;border:1px solid;border-radius:13px;font-family:system-ui}.code{color:#ff2121;background-color:#dcdcdc;padding:5px;border-radius:3px;font-size:18px}li{line-height:44px}</style> </head> <body> <div class="container"> <div class="description"> <span>Congrats ü•≥ The script has been successfully deployed!</span><br/><br/> Next Steps: <ol> <li>Follow this guide to find your Notion token_v2.</li> <li> Navigate to your <b>Worker > Settings > Variables </b>and add the following secrets: <ul> <li> <span class="code">TOKEN_V2</span> paste the value of your Notion token (<b>required</b>) </li> <li> <span class="code">SLACK_WEBHOOK</span> paste your Slack webhook URL (optional) </li> <li> <span class="code">DISCORD_WEBHOOK</span> paste your Discord webhook URL (optional) </li> </ul> </li> </ol> </div> </div> </body> </html> '},function(e,t,n){"use strict";n.r(t);const o=globalThis.TOKEN_V2,a="https://www.notion.so/api/v3",i={Cookie:`token_v2=${void 0!==typeof o?o:""};`,"Content-Type":"application/json"},s=e=>new Promise(async(t,n)=>{try{const o=await(async e=>{const t={task:{eventName:"exportSpace",request:{spaceId:e,exportOptions:{exportType:"undefined"!=typeof EXPORT_TYPE?EXPORT_TYPE:"html",timeZone:"undefined"!=typeof TIMEZONE?TIMEZONE:"Etc/UTC",locale:"undefined"!=typeof LOCALE?LOCALE:"en"}}}},n=await fetch(a+"/enqueueTask",{method:"POST",body:JSON.stringify(t),headers:i}),{taskId:o}=await n.json();return o})(e.id),s=setInterval(async()=>{const r=await(async e=>{const t=await fetch(a+"/getTasks",{method:"POST",body:JSON.stringify({taskIds:[e]}),headers:i});return(await t.json()).results[0].status})(o);if(r){if("complete"===r.type){clearInterval(s);const n={...e,url:r.exportURL};t(n)}}else clearInterval(s),n(new Error(`Failed to export ${e.name} workspace`))},5e3)}catch(e){console.error(e),n(new Error("Something went wrong"))}}),r=async()=>{const e=(await(async()=>{const e=await fetch(a+"/getSpaces",{method:"POST",headers:i}),t=await e.json(),n=t[Object.keys(t)[0]].space;return Object.keys(n).map(e=>({id:n[e].value.id,name:n[e].value.name}))})()).map(e=>s(e));return Promise.allSettled(e)},c=()=>{const e=new Date;return`${e.getFullYear()}-${e.getMonth()+1}-${e.getDate()} -- ${e.getHours()}:${e.getMinutes()}`},l=async e=>{try{"undefined"!=typeof SLACK_WEBHOOK&&await(async e=>{const t={blocks:[{type:"header",text:{type:"plain_text",text:"üíæ Backup: "+c(),emoji:!0}},{type:"divider"},...e.map(e=>(e=>({type:"section",text:{type:"mrkdwn",text:"fulfilled"===e.status?e.value.name+" workspace `‚úÖ Success`":e.reason+" `‚ùå Failed`"},accessory:{type:"button",text:{type:"plain_text",text:"Download",emoji:!0},value:"download",url:"fulfilled"===e.status?e.value.url:"https://youtu.be/dQw4w9WgXcQ",action_id:"button-action"}}))(e)),{type:"divider"}]};await fetch(SLACK_WEBHOOK,{method:"POST",body:JSON.stringify(t),headers:{"Content-Type":"application/json"}})})(e),"undefined"!=typeof DISCORD_WEBHOOK&&await(async e=>{const t={username:"Notion Backups",content:`> üíæ **Backup: ${c()}**`,embeds:[...e.map(e=>({color:5763719,author:{name:"fulfilled"===e.status?e.value.name+" workspace":"‚ùå Failed: "+e.reason},title:"Download",url:"fulfilled"===e.status?e.value.url:"https://youtu.be/dQw4w9WgXcQ"}))]};await fetch(DISCORD_WEBHOOK,{method:"POST",body:JSON.stringify(t),headers:{"Content-Type":"application/json"}})})(e)}catch(e){throw console.error(e),new Error("failed to send notification")}},d=async e=>{try{"undefined"!=typeof SLACK_WEBHOOK&&await(async e=>{const t={blocks:[{type:"section",text:{type:"mrkdwn",text:e}}]};await fetch(SLACK_WEBHOOK,{method:"POST",body:JSON.stringify(t),headers:{"Content-Type":"application/json"}})})(e),"undefined"!=typeof DISCORD_WEBHOOK&&await(async e=>{const t={username:"Logs",content:e};await fetch(DISCORD_WEBHOOK,{method:"POST",body:JSON.stringify(t),headers:{"Content-Type":"application/json"}})})(e)}catch(e){throw console.error(e),new Error("failed to send notification")}},p=async()=>{try{if("undefined"==typeof TOKEN_V2)return;console.log("Start",TOKEN_V2);const e="üì° *log*: starting the backup process\n";await d(e);const t=await r();await l(t)}catch(e){console.error(e)}};var u=n(0),f=n.n(u),y=n(1),h=n.n(y);addEventListener("fetch",e=>{e.respondWith(async function(e){const{pathname:t}=new URL(e.request.url);if("undefined"==typeof TOKEN_V2)return new Response(h.a,{headers:{"content-type":"text/html"}});if("/test"===t)return"undefined"!=typeof MODE&&"test"==MODE?(e.waitUntil(p()),new Response("OK",{status:200})):new Response("Failed to trigger the script, please enable test mode",{status:400});return new Response(f.a,{headers:{"content-type":"text/html"}})}(e))}),addEventListener("scheduled",e=>{e.waitUntil(p())})}]);